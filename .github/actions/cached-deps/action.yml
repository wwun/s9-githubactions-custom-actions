name: 'Get and Cache Dependencies'
description: 'Get the dependencies and cache them'
inputs:
  caching:  #this name depends on the person
    description: 'whther to cache dependencies or not'
    required: false
    default: 'true'
outputs:  # permite que un paso (step) defina valores que pueden ser usados en pasos posteriores del mismo job
  used-cache: # define el output llamado used cahce, this will be the value of inputs.caching when install dependencies step is executed
    description: 'whetr the cache was used'
    value: ${{ steps.install.outputs.cache }} #note install is the id in install dependencies step, toma el valor del output de install dependencies
runs:
  using: 'composite'
  steps:
    - name: Cache dependencies
      if: inputs.caching == 'true'  #this caching name match the name used in inputs
      id: cache
      uses: actions/cache@v4
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      id: install
      if: steps.cache.outputs.cache-hit != 'true' || inputs.caching != 'true' # note cache-hit is an output generated by the step in the step with id cache, what it means is if cache hit is true it means a cache was found and was restaured if not, the dependencies need to be installed
      run: |
        npm ci
        echo "::set-output name=cache::'${{ inputs.caching}}'"  
      # set-output name=cache establece un output llamdo cache
      # the value of this output is  the value of input caching
      shell: bash # this must be added whn a composite is created and a run key
      # it is normal to use another actions in custom actions

# En el código que has mostrado, used-cache no se usa explícitamente dentro del composite action.
# Pero used-cache es un output del composite action, lo que significa que:
# Podría ser usado por el workflow que llama a este composite action si lo necesita.
# Sirve como una forma de exponer información sobre el valor de inputs.caching cuando se ejecutó el paso "Install dependencies